
$ django-admin startproject single_model_orm

$ cd single_model_orm/

Modified settings.py. No need to update project level urls.py or create an app level url.py

$ python manage.py startapp users_app

$ python manage.py runserver

$ ctrl c

Update the models.py with the new class with the following info

class User(models.Model):
    first_name = models.CharField(max_length=255)
    last_name = models.CharField(max_length=255)
    email_address = models.CharField(max_length=255)
    age = models.IntegerField()
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

$ python manage.py makemigrations

$ python manage.py migrate

$ python manage.py shell

>>> from users_app.models import *

Query: Create 3 new users
>>> User.objects.create(first_name="Odion", last_name="Fross", email_address="olf@gmail.com", age=29)
>>> User.objects.create(first_name="Zeb", last_name="Fross", email_address="zlf@hotmail.com", age=29)
>>> User.objects.create(first_name="Louisa", last_name="Oisamoje", email_address="olo@gmail.com", age=29)

Query: Retrieve all the users
>>> User.objects.all().values()

Query: Retrieve the last user
>>> User.objects.last().__dict__

Query: Retrieve the first user
>>> User.objects.first().__dict__

Query: Change the user with id=3 so their last name is Pancakes.
>>> update_user = User.objects.get(id=3)
>>> update_user.last_name = "Pancakes"
>>> update_user.save()

Query: Delete the user with id=2 from the database
>>> delete_user = User.objects.get(id=2)
>>> delete_user.delete()

Query: Get all the users, sorted by their first name (in ascending order)
>>> User.objects.all().order_by("first_name").values()

BONUS Query: Get all the users, sorted by their first name in descending order
>>> User.objects.all().order_by("-first_name").values()


---
Resources
- ORM CRUD Commands: http://learn.codingdojo.com/m/108/6433/45820
